function watchForElm(selector, callfun) {
        // Select the node that will be observed for mutations
        const targetNode = document.querySelector(selector);

        // Options for the observer (which mutations to observe)
        const config = { childList: true, subtree: true };

        let timeoutId;

        // Callback function to execute when mutations are observed
        const callback = (mutationList, observer) => {
            for (const mutation of mutationList) {
                if (mutation.type === "childList") {
                    clearTimeout(timeoutId);
                    timeoutId = setTimeout(()=> {
                        console.log("Seat Changed!");
                        callfun();
                    },500);

                } else if (mutation.type === "attributes") {
                    //console.log(`The ${mutation.attributeName} attribute was modified.`);
                }
            }
        };

        // Create an observer instance linked to the callback function
        const observer = new MutationObserver(callback);

        // Start observing the target node for configured mutations
        observer.observe(targetNode, config);
    }